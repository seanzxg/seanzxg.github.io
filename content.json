{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://rainmar.com","root":"/"},"pages":[{"title":"关于","date":"2019-11-12T01:33:34.496Z","updated":"2019-11-06T07:47:35.796Z","comments":false,"path":"about/index.html","permalink":"http://rainmar.com/about/index.html","excerpt":"","text":"123456789101112131415161718192021222324252627282930&#123; name: \"小光 Sean\", age: 26, gender: \"男\", profession: \"Web Developer\", experience: \"4年\", address: \"北京\", education: \"本科\", github: \"https://github.com/seanzxg\", blog: \"http://blog.rainmar.com\", email: \"seanxg@163.com\", description: \"致力于网站建设\", skills: [ [\"Html\", \"Javascript\", \"jQuery\", \"CSS\", \"ES6\", \"Node\"], [\"Webpack\", \"Gulp\"], [\"Less\",\"Sass\"], [\"Git\", \"SVN\"], [\"Vue\"], [\"Bootstrap\", \"SUI Mobile\", \"light7\"], [\"WordPress\", \"OpenCart\"], ], devTools: [ [\"Webstorm\", \"Visual Studio Code\", \"Notepad++\"], [\"Chrome DevTools\", \"Fiddler\"], [\"SourceTree\", \"TortoiseSVN\"], [\"SwitchHosts\"], [\"Navicat\", \"XAMPP\"], ]&#125;"},{"title":"分类","date":"2019-11-12T01:26:19.384Z","updated":"2019-11-05T09:53:42.832Z","comments":false,"path":"categories/index.html","permalink":"http://rainmar.com/categories/index.html","excerpt":"","text":"小光爱吃肉"},{"title":"标签","date":"2019-11-12T01:26:20.214Z","updated":"2019-11-05T09:44:10.063Z","comments":false,"path":"tags/index.html","permalink":"http://rainmar.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo博客-搭建","slug":"Hexo博客-搭建","date":"2019-11-06T06:17:06.000Z","updated":"2019-11-13T10:57:31.470Z","comments":true,"path":"ck2x691t200006gxi2odc0ql6/","link":"","permalink":"http://rainmar.com/ck2x691t200006gxi2odc0ql6/","excerpt":"","text":"开始为何是Hexo？我简单搜了一下博客框架，大概看了几种，作为一个前端，我选择了Hexo。原因如下： 支持Markdown 轻量级，不需要后台或者数据库 一键部署，不需要配置太多的环境，而且跟前端工作相近，打包，生成静态文件等 插件挺多，虽然还没咋用 找到了我喜欢的主题 基于node.js，熟悉感 More info: Hexo Doc 环境一台电脑，最好是linux系统或者mac os系统 Node.js（安装稳定版即可 如果你有意境有了node环境，确保自己的版本不低于8.6即可） Git tip：如果某些原因需要多版本node，安装nvm进行版本控制 建站1.安装Hexo Cli1$ npm install -g hexo-cli 2.构建博客项目123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install hexo init &lt;folder&gt; 执行过程是把 hexo-starter 把项目克隆到folder目录下，顺带把landscape主题克隆到theme/目录,最后把相关的git的都删掉。给你一个初始化的项目 npm install 安装项目运行相关的依赖包 npm相关的操作请查阅npm文档 tip: 我们在用别人的主题的时候，那么你会把相关主题克隆到theme目录下，导致项目中有其他项目git，则无法提交。以submodule方式提交，因为你修改了__config配置文件，也是无法提交。结果就只有删除掉你克隆的主题.git文件。如果有方案保持其他项目的git管理，又能改动主题的配置文件，同时能提交到自己的仓库，请指教 3.配置博客网站的配置产考文档 hexo 配置 主题引用配置各主题稍有差异，挑一个自己喜欢的主题根据文档来配置。主题 github搜hexo theme关键词也能搜到 说一个注意点： 如果博客是www.xxx.com/blog 那么你的root配置则配置/blog/ 如果博客是blog.xxx.com/ 那么你的root配置则配置/ tip：root是在你打包构建的时候 生成的public文件中，html引用资源的路径。本地可以配置nginx模拟一下服务器访问，确保生成的资源可访问。 4.常用命令12345678// 构建项目，生成静态文件hexo generate// 发布项目到服务器/githubhexo deploy// 本地运行服务 默认：localhost:4000hexo server// 清理构建项目生成的文件hexo clean 打开package.json中script部分显示 1234567&quot;scripts&quot;: &#123; &quot;build&quot;: &quot;hexo generate&quot;, &quot;clean&quot;: &quot;hexo clean&quot;, &quot;deploy&quot;: &quot;hexo deploy&quot;, &quot;server&quot;: &quot;hexo server&quot;, &quot;auto&quot;: &quot;npm run clean &amp; npm run generate &amp; npm run deploy&quot;&#125; npm install装完依赖后，可以通过 123456npm run cleannpm run buildnpm run deploynpm run server一键清除、构建、部署服务npm run auto 以上执行等同于常用命令 执行到这里，你已经搭成了可以在本地运行，可构建的博客项目了，恭喜 那么问题来了，如何把你项目部署到服务器或者github pages呢？ 请看下期","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://rainmar.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"博客","slug":"博客","permalink":"http://rainmar.com/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"Hexo博客-服务器部署","slug":"Hexo博客-服务器部署","date":"2019-11-06T06:17:06.000Z","updated":"2019-11-13T10:57:01.356Z","comments":true,"path":"ck2x691t700026gxi0l0ocp8h/","link":"","permalink":"http://rainmar.com/ck2x691t700026gxi0l0ocp8h/","excerpt":"","text":"开始通过上一期Hexo博客-搭建,能够构建一个完整 可运行博客的项目，配置相关参数，构建生成静态文件。 本期讲如何把项目构建并部署到服务器上 流程总览服务器环境安装-&gt;创建git用户-&gt;博客git hook-&gt;nginx配置-&gt;hexo deploy 部署1.环境安装nginx git 博主的服务器是ubuntu 1$ apt install nginx git -y 2.创建git环境① 以root用户登录123456$ sudo adduser git$ su git$ cd$ mkdir .ssh &amp;&amp; chmod 700 .ssh$ touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys ② 把 SSH 公钥添加到authorized_keys文件中简单说就是把你的ssh添加到服务器的authorized_keys文件中，以后服务器在拉取代码等操作不用登录 怎么配置ssh？ 例如github，头像&gt;setting&gt;SSH and GPG keys 生成ssh和添加ssh到本机的链接生成ssh教程 配置完ssh后，在本机的命令行做以下操作 1234$ cd ~$ ls -al ~/.ssh把`id_rsa.pub`文件发到服务器上$ scp root@xxx.xxx.xxx.xxx:/path/to/server .ssh/id_rsa.pub 服务器执行 1$ cat /path/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys 为了安全考虑，需要禁止掉git用户shell登录，参考 git服务器配置 3. 创建git仓库目录 配置git hooks①创建一个名为blog的git裸仓库123$ mkdir /path/to/repo$ cd /path/to/repo$ git init --bare blog.git ②创建 hook 钩子函数1vim /var/repo/blog.git/hooks/post-receive ③输入了内容如下12#!/bin/sh$ git --work-tree=/path/to/blog/ --git-dir=/path/to/repo/blog.git checkout -f ④改变blog.git的目录拥有者权限1$ chown -R git:git blog.git ⑤ 创建博客静态文件目录123mkdir /path/to/blog/chown -R git:git /path/to/blog/chmod -R 755 /path/to/blog/ ⑥ 调试一下是否部署成功1git clone git@服务器ip:/path/to/repo/blog.git 如果克隆到当前文件中一个空的blog文件，那么你的blog配置就成功了。 4. 服务器nginx配置① 域名配置1vim /etc/nginx/site-available/rainmar.com rainmar.com是我的域名，并做好了ip和域名映射。 如果你没有域名或者本地调试，默认是default ②nginx配置1234567891011server &#123; listen 80; listen [::]:80; server_name rainmar.com www.rainmar.com; index index.html; location / &#123; alias /data/projects/blog/; index index.html; try_files $uri $uri/ /index.html =404; &#125;&#125; ③ 重启nginx1/etc/init.d/nginx restart 5.hexo deploy① 打开博客项目根目录下_config.yml文件,配置如下 1234deploy: type: git repository: git@ip或域名:/path/to/blog.git branch: master ②打开package.json文件 1234567&quot;scripts&quot;: &#123; &quot;build&quot;: &quot;hexo generate&quot;, &quot;clean&quot;: &quot;hexo clean&quot;, &quot;deploy&quot;: &quot;hexo deploy&quot;, &quot;server&quot;: &quot;hexo server&quot;, &quot;c&quot;: &quot;npm run clean &amp; npm run build &amp; npm run deploy&quot; &#125; npm run c 一键部署 参考文献、文档git仓库和项目源码分离git init 和 git init –bare","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://rainmar.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"博客","slug":"博客","permalink":"http://rainmar.com/tags/%E5%8D%9A%E5%AE%A2/"}]}]}